第三集：【生命游戏 ｜ 第三集】 振荡器
技术问题：
1. 当方格太多显示难看，FadeIn FadeOut难看
2. updater （参考星空汤源码）

大纲：
1. 回顾定义
2. 引入静子/动子，凤凰等
3. simple search -> small object -> any systematic way?

4. billiard table -> less regular shape -> enumerate (in golly)
5. stabilizing corner (eater) to counter-reaction
6. recall the simplest way -- period p, q, put it far away enough,
then can create one with lcm(p, q) -> called trivial Oscillator! normally neglect

7. composite period / spark
8. types of sparkers (when introducing domino spark can intro what is domino)
9. hasslers

10. shuttles
11. glider loops and reflecters
12. Herschel Track

====== 引入定子/动子，凤凰等 ====
我们知道振荡器的定义就是每过一个周期就会恢复成原来的样子，（素材：pulsar）
可以发现在振荡的过程中某些细胞一直保持生的状态，所以为方便称呼直接称它是定子(stator)，
而其他细胞就被叫做动子(rotor); （素材：mold, spark coil, beacon）

那么是否存在生命没有定子呢？答案是肯定的（statorless osciallator 无定子振荡器）
如以上两个里面每个细胞在一个周期中都会有状态变更（Achim's P16, Kok's galaxy）

另外，还存在生命有一个有趣的性质，
就是它所有活着的细胞在每一代结束后都会死掉，但是又不是整体的死亡
（素材：Phoenix 1）
借凤凰死后浴火重生之意，我们把这种生命称为凤凰，
爱好者证明了有限个细胞的凤凰最终都会演化成振荡器（凤凰振荡器）：
（素材：爱心形状 + 几个零散的细胞）
这种振荡器叫做凤凰振荡器，属于是无静子振荡器的一种；
（FadeOut)

======================= 一定的时间间隔
（FadeIn）
以上的内容虽然有趣，但远远没有接下来这个问题和衍生出来的方法有趣
在振荡器相关的研究当中，omniperiodicity problem 算是最古老而且最多人研究的一个问题了，而它是指什么意思呢？
omni-指全，全部，periodicity就是指周期；（hyper means high逃

我们知道每个振荡器都有自己的周期，如xx周期为5，xx周期为7（简写成p5,p7）
omnipriodicity problem就是指对于任意的周期n是否都存在着这个周期的振荡器（动画：一堆数字，下面物体，打勾）；
而目前周期为19，34，41的振荡器仍然没有被找到

视频接下来的内容就是详细介绍爱好者们是如何构造各种周期的振荡器的，那就让我们开始吧！

==========================================
初步的探索（七十年代）是先使用暴力的电脑搜索 （soup search），
随机生成一个式样，再让它自由演化，看看能不能发现新的振荡器；
通过这样可以搜索出一些比较小的振荡器，然而这方法仍然不够系统而且效率太低；

在之后推出了一种更加系统化的方法，叫做台球桌构造法： (billiard table configuration)
在这种构造方法里面，动子被包在定子里面；
我们可以构造一个“台球桌”,比如4*3,但标注的红色格子在下一代会诞生生命，因为它们的周围都恰有三个细胞；
所以我们在四条边外加感应线圈让它们不会生长出来
然后暴力枚举在里面放置细胞，找到它们在里面振荡而且不破坏外面的结构的情况

总共有4 * 3 = 12个位置放置细胞，每个位置可以有也可以没有细胞
所以一共有2^(4 * 3) = 4096种可能状态，既然这样，我们可以知道周期不可能大于4096 （画一个搜索树）
也就是说需要迭代4096 * 4096次，每次迭代需要考虑11*12=132个方格的变化，每个方格的变化又得遍历周围8个方格的状态；
看起来最多有4096 * 4096 * 132 * 8 = 10^10那么多，似乎需要遍历很久；
但是其实可以有很多种剪枝方法，能有效减小搜索空间的大小；
比如利用对称性，当这个搜索过后，这个就没必要再搜索了，
有很多迭代了很少次就会破坏台球桌的形状，就可以直接排除掉，
在搜索树上方的结点搜索完后，下方就没必要重新再搜索一次了；
在剪枝后就能很快得出很多振荡器，如图所示
(hertz oscialltor, negentropy)

另外，其实台球桌并不一定要是长方形形状，也可以长得有点不一样，只要是动子在定子内部就行
burloaferimeter, cauldron

除了台球桌构造法，还有很多其他方法；
以下这个其实和台球桌原理类似：
当我们放置一个随机的生命，然后观察它的演化，可以看到它在剧烈的反应； (unnamed p52)
那么，如果我们控制生命的反应在一个限定的中心区域里，在周围放置一些物体把反应当中产生的破坏振荡周期性的物体吸收掉，
是否就能把它变成振荡器呢？
这个时候我们自然而然就能想到上集里我们用到的吞噬者1；
就能生成非常多的振荡器，吞噬者2也可以做到相同的事

当然说到这里，有些观众可能已经发现，以上的构造都那么繁琐，为什么我们不把两个或者多个振荡器摆在一起，
只要摆的足够远使得它们之间没有互动，就能很方便的构造周期；
比如说我们已经知道周期为3，周期为5的振荡器，摆一起就能形成周期为lcm(3, 5) = 15的振荡器；
把周期为4和周期为6的振荡器摆一块可以形成周期为lcm(4, 6) = 12的振荡器；
但这种构造方法太直接，爱好者直接把它叫成trivial osciallator (大嘘)，不纳入考虑范围；

考虑构造振荡器的时候只会考虑non-trivial的，我们依然可以依照之前的方法同时摆放两个振荡器，但需要让它们产生互动；
这个时候就可以引入一个概念 -- 叫火花 (spark) 

=========== 总结  ================

=====================
术语翻译表
定子 stator
动子 rotor
无定子振荡器 statorless osciallator
凤凰 phoneix
台球桌 billiard table


物体翻译表